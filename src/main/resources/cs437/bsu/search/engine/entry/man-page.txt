NAME
    search-engine.jar - A Search Engine builder and runner


SYNOPSIS
    search-engine.jar [-t | --type] type args
    search-engine.jar [-c | --config-file] config-file [-t | --type] type args
    search-engine.jar [-h | --help]


DESCRIPTION
     This Application was designed to build an Inverse Index and then once built be able
     to work as a Search Engine over the corpus that was indexed.

     Note: This application will need to be hooked up to a MySQL Database in order to store
     the inverse index.


OPTIONS

These arguments are designed such that placement of them anywhere on the command line will
not affect parsing them (The help arg is an exception). Also, for convenience case sensitivity
is lax, upper case vs lower case doesn't matter.

    [-h | --help]
        Prints this page and provides info on how to use this application. Note that this arg
        has the highest precedence and any args found afterwards will be skipped.

    [-c | --config-file] config-file
        Loads the provided properties file so that default values can be established for various
        items. Those items are anything from logging setup to database connection info.

    [-t | --type] Type args
        This Defines what the application will be doing on the current run. There are currently
        two modes:

            Type: CreateIndex, args: dir
               When providing this as the type upon execution of the jar an inverse index will be
               setup on a database. This requires providing the directory to index all the files for.

            Type: SearchEngine, args: N/A
                When providing this as the type upon execution of the jar prompts will be provided
                for the user to utilize created reverse index to search a corpus.

SYSTEM PROPERTIES

    Below are the available System Properties that can be provided through the configuration file
    or in the java options section of the command. Each one is placed within a section and labeled
    to indicate if it's mandatory or optional. They are also associated to different types to help
    indicate which are used with what running application.

    LOGGING

        - org.slf4j.simpleLogger.logFile: (Optional) (Type: CreateIndex, SearchEngine)
            The output target which can be the path to a file, or the special values "System.out" and
            "System.err". Default is "System.err".

        - org.slf4j.simpleLogger.cacheOutputStream: (Optional) (Type: CreateIndex, SearchEngine)
            If the output target is set to "System.out" or "System.err" (see preceding entry), by default,
            logs will be output to the latest value referenced by System.out/err variables. By setting
            this parameter to true, the output stream will be cached, i.e. assigned once at initialization
            time and re-used independently of the current value referenced by System.out/err.

        - org.slf4j.simpleLogger.defaultLogLevel: (Optional) (Type: CreateIndex, SearchEngine)
            Default log level for all instances of SimpleLogger. Must be one of ("trace", "debug", "info",
            "warn", "error" or "off"). If not specified, defaults to "info".

        - org.slf4j.simpleLogger.log.a.b.c: (Optional) (Type: CreateIndex, SearchEngine)
            Logging detail level for a SimpleLogger instance named "a.b.c". Right-side value must be one of
            "trace", "debug", "info", "warn", "error" or "off". When a SimpleLogger named "a.b.c" is
            initialized, its level is assigned from this property. If unspecified, the level of nearest parent
            logger will be used, and if none is set, then the value specified by org.slf4j.simpleLogger.defaultLogLevel
            will be used.

        - org.slf4j.simpleLogger.showDateTime: (Optional) (Type: CreateIndex, SearchEngine)
            Set to true if you want the current date and time to be included in output messages. Default is false.

        - org.slf4j.simpleLogger.dateTimeFormat: (Optional) (Type: CreateIndex, SearchEngine)
            The date and time format to be used in the output messages. The pattern describing the date and time
            format is defined by SimpleDateFormat. If the format is not specified or is invalid, the number of
            milliseconds since start up will be output.

        - org.slf4j.simpleLogger.showThreadName: (Optional) (Type: CreateIndex, SearchEngine)
            Set to true if you want to output the current thread name. Defaults to true.

        - org.slf4j.simpleLogger.showLogName: (Optional) (Type: CreateIndex, SearchEngine)
            Set to true if you want the Logger instance name to be included in output messages. Defaults to true.

        - org.slf4j.simpleLogger.showShortLogName: (Optional) (Type: CreateIndex, SearchEngine)
            Set to true if you want the last component of the name to be included in output messages. Defaults
            to false.

        - org.slf4j.simpleLogger.levelInBrackets: (Optional) (Type: CreateIndex, SearchEngine)
            Should the level string be output in brackets? Defaults to false.

        - org.slf4j.simpleLogger.warnLevelString: (Optional) (Type: CreateIndex, SearchEngine)
            The string value output for the warn level. Defaults to WARN.

    DATABASE

        - database.credential.username: (Mandatory) (Type: CreateIndex, SearchEngine)
            The username of the database to connect to. Must be clear text.

        - database.credential.password: (Mandatory) (Type: CreateIndex, SearchEngine)
            The password of the database to connect to associated to the username. Must be clear text.

        - database.connection.address: (Mandatory) (Type: CreateIndex, SearchEngine)
            The IP or Host Address of the database to communicate with.

        - database.connection.port: (Mandatory) (Type: CreateIndex, SearchEngine)
            The port to communicate over between this machine and the database.